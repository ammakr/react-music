{"version":3,"sources":["components/Player.js","components/Song.js","data.js","components/LibrarySong.js","components/Library.js","components/Nav.js","App.js","reportWebVitals.js","index.js"],"names":["Player","currentSong","setSongs","isPlaying","setIsPlaying","audioRef","songInfo","setSongInfo","songs","setCurrentSong","activeLibraryHandler","nextPrev","newSongs","map","song","id","active","getTime","time","Math","floor","slice","skipTrackHandler","direction","a","currentIndex","findIndex","length","current","play","trackAnim","transform","animationPercentage","className","currentTime","style","background","color","min","max","duration","onChange","e","target","value","type","icon","faAngleLeft","size","onClick","pause","faPause","faPlay","faAngleRight","Song","src","cover","alt","name","artist","chillHop","audio","uuidv4","LibrarySong","songSelectHandler","filter","state","selectedSong","newSong","Library","libraryStatus","Nav","setLibraryStatus","faMusic","App","useRef","useState","data","timeUpdateHandler","roundedCurrent","round","roundedDuration","animation","songEndHandler","onTimeUpdate","onLoadedMetadata","ref","onEnded","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d14a1d9e.chunk.js","sourcesContent":["import { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport {\n  faPlay,\n  faAngleRight,\n  faAngleLeft,\n  faPause,\n} from \"@fortawesome/free-solid-svg-icons\";\n\nconst Player = ({\n  currentSong,\n  setSongs,\n  isPlaying,\n  setIsPlaying,\n  audioRef,\n  songInfo,\n  setSongInfo,\n  songs,\n  setCurrentSong,\n}) => {\n  const activeLibraryHandler = (nextPrev) => {\n    const newSongs = songs.map((song) => {\n      if (song.id === nextPrev.id) {\n        return {\n          ...song,\n          active: true,\n        };\n      } else {\n        return {\n          ...song,\n          active: false,\n        };\n      }\n    });\n    setSongs(newSongs);\n  };\n\n  const playSongHandler = () => {\n    if (isPlaying) {\n      audioRef.current.pause();\n      setIsPlaying(!isPlaying);\n    } else {\n      audioRef.current.play();\n      setIsPlaying(!isPlaying);\n    }\n  };\n\n  const getTime = (time) => {\n    return (\n      Math.floor(time / 60) + \":\" + (\"0\" + Math.floor(time % 60)).slice(-2)\n    );\n  };\n\n  const dragHandler = (e) => {\n    audioRef.current.currentTime = e.target.value;\n    setSongInfo({ ...songInfo, currentTime: e.target.value });\n  };\n\n  const skipTrackHandler = async (direction) => {\n    let currentIndex = songs.findIndex((song) => song.id === currentSong.id);\n    if (direction === \"skip-forward\") {\n      await setCurrentSong(songs[(currentIndex + 1) % songs.length]);\n      activeLibraryHandler(songs[(currentIndex + 1) % songs.length]);\n    }\n    if (direction === \"skip-back\") {\n      if ((currentIndex - 1) % songs.length === -1) {\n        await setCurrentSong(songs[songs.length - 1]);\n        activeLibraryHandler(songs[songs.length - 1]);\n        if (isPlaying) audioRef.current.play();\n        return;\n      }\n      await setCurrentSong(songs[(currentIndex - 1) % songs.length]);\n      activeLibraryHandler(songs[(currentIndex - 1) % songs.length]);\n    }\n    if (isPlaying) audioRef.current.play();\n  };\n\n  //styles\n  const trackAnim = {\n    transform: `translateX(${songInfo.animationPercentage / 3}%)`,\n  };\n\n  return (\n    <div className=\"player\">\n      <div className=\"time-control\">\n        <p>{getTime(songInfo.currentTime)}</p>\n        <div\n          className=\"track\"\n          style={{\n            background: `linear-gradient(to right, ${currentSong.color[0]}, ${currentSong.color[1]})`,\n          }}\n        >\n          <input\n            min={0}\n            max={songInfo.duration || 0}\n            onChange={dragHandler}\n            value={songInfo.currentTime}\n            type=\"range\"\n          />\n          <div style={trackAnim} className=\"animate-track\"></div>\n        </div>\n        <p>{songInfo.duration ? getTime(songInfo.duration) : \"0:00\"}</p>\n      </div>\n      <div className=\"play-control\">\n        <FontAwesomeIcon\n          className=\"skip-back\"\n          icon={faAngleLeft}\n          size=\"2x\"\n          onClick={() => skipTrackHandler(\"skip-back\")}\n        />\n        <FontAwesomeIcon\n          onClick={playSongHandler}\n          className=\"play\"\n          icon={isPlaying ? faPause : faPlay}\n          size=\"2x\"\n        />\n        <FontAwesomeIcon\n          className=\"skip-forward\"\n          icon={faAngleRight}\n          size=\"2x\"\n          onClick={() => skipTrackHandler(\"skip-forward\")}\n        />\n      </div>\n    </div>\n  );\n};\n\nexport default Player;\n","const Song = ({ currentSong }) => {\n  return (\n    <div className=\"song-container\">\n      <img src={currentSong.cover} alt={currentSong.name}></img>\n      <h1>{currentSong.name}</h1>\n      <h3>{currentSong.artist}</h3>\n    </div>\n  );\n};\n\nexport default Song;\n","import { v4 as uuidv4 } from \"uuid\";\n\nfunction chillHop() {\n  return [\n    {\n      name: \"Beaver Creek\",\n      cover:\n        \"https://chillhop.com/wp-content/uploads/2020/09/0255e8b8c74c90d4a27c594b3452b2daafae608d-1024x1024.jpg\",\n      artist: \"Aso, Middle School, Aviino\",\n      audio: \"https://mp3.chillhop.com/serve.php/?mp3=10075\",\n      color: [\"#205950\", \"#2ab3bf\"],\n      id: uuidv4(),\n      active: true,\n    },\n    {\n      name: \"Daylight\",\n      cover:\n        \"https://chillhop.com/wp-content/uploads/2020/07/ef95e219a44869318b7806e9f0f794a1f9c451e4-1024x1024.jpg\",\n      artist: \"Aiguille\",\n      audio: \"https://mp3.chillhop.com/serve.php/?mp3=9272\",\n      color: [\"#EF8EA9\", \"#ab417f\"],\n      id: uuidv4(),\n      active: false,\n    },\n    {\n      name: \"Keep Going\",\n      cover:\n        \"https://chillhop.com/wp-content/uploads/2020/07/ff35dede32321a8aa0953809812941bcf8a6bd35-1024x1024.jpg\",\n      artist: \"Swørn\",\n      audio: \"https://mp3.chillhop.com/serve.php/?mp3=9222\",\n      color: [\"#CD607D\", \"#c94043\"],\n      id: uuidv4(),\n      active: false,\n    },\n    {\n      name: \"Nightfall\",\n      cover:\n        \"https://chillhop.com/wp-content/uploads/2020/07/ef95e219a44869318b7806e9f0f794a1f9c451e4-1024x1024.jpg\",\n      artist: \"Aiguille\",\n      audio: \"https://mp3.chillhop.com/serve.php/?mp3=9148\",\n      color: [\"#EF8EA9\", \"#ab417f\"],\n      id: uuidv4(),\n      active: false,\n    },\n    {\n      name: \"Reflection\",\n      cover:\n        \"https://chillhop.com/wp-content/uploads/2020/07/ff35dede32321a8aa0953809812941bcf8a6bd35-1024x1024.jpg\",\n      artist: \"Swørn\",\n      audio: \"https://mp3.chillhop.com/serve.php/?mp3=9228\",\n      color: [\"#CD607D\", \"#c94043\"],\n      id: uuidv4(),\n      active: false,\n    },\n    {\n      name: \"Under the City Stars\",\n      cover:\n        \"https://chillhop.com/wp-content/uploads/2020/09/0255e8b8c74c90d4a27c594b3452b2daafae608d-1024x1024.jpg\",\n      artist: \"Aso, Middle School, Aviino\",\n      audio: \"https://mp3.chillhop.com/serve.php/?mp3=10074\",\n      color: [\"#205950\", \"#2ab3bf\"],\n      id: uuidv4(),\n      active: false,\n    },\n  ];\n}\n\nexport default chillHop;\n","const LibrarySong = ({\n  song,\n  songs,\n  setCurrentSong,\n  id,\n  audioRef,\n  isPlaying,\n  setSongs,\n}) => {\n  const songSelectHandler = async () => {\n    const [selectedSong] = songs.filter((state) => state.id === id);\n    await setCurrentSong(selectedSong);\n\n    const newSong = songs.map((song) => {\n      if (song.id === id) {\n        return {\n          ...song,\n          active: true,\n        };\n      } else {\n        return {\n          ...song,\n          active: false,\n        };\n      }\n    });\n\n    setSongs(newSong);\n\n    if (isPlaying) audioRef.current.play();\n  };\n  return (\n    <div\n      onClick={songSelectHandler}\n      className={`library-song ${song.active ? \"selected\" : \"\"}`}\n    >\n      <img src={song.cover} alt={song.name}></img>\n      <div className=\"song-description\">\n        <h3>{song.name}</h3>\n        <h4>{song.artist}</h4>\n      </div>\n    </div>\n  );\n};\n\nexport default LibrarySong;\n","import LibrarySong from \"./LibrarySong\";\n\nconst Library = ({\n  songs,\n  setCurrentSong,\n  audioRef,\n  isPlaying,\n  setSongs,\n  libraryStatus,\n}) => {\n  return (\n    <div className={`library ${libraryStatus ? \"active-library\" : \"\"}`}>\n      <h2>Library</h2>\n      <div className=\"library-songs\">\n        {songs.map((song) => (\n          <LibrarySong\n            songs={songs}\n            song={song}\n            setCurrentSong={setCurrentSong}\n            id={song.id}\n            key={song.id}\n            audioRef={audioRef}\n            isPlaying={isPlaying}\n            setSongs={setSongs}\n          />\n        ))}\n      </div>\n    </div>\n  );\n};\n\nexport default Library;\n","import { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faMusic } from \"@fortawesome/free-solid-svg-icons\";\n\nconst Nav = ({ setLibraryStatus, libraryStatus }) => {\n  return (\n    <nav>\n      <h1>Ammar Music</h1>\n      <button onClick={() => setLibraryStatus(!libraryStatus)}>\n        Library\n        <FontAwesomeIcon icon={faMusic} />\n      </button>\n    </nav>\n  );\n};\n\nexport default Nav;\n","import \"./styles/app.scss\";\nimport Player from \"./components/Player\";\nimport Song from \"./components/Song\";\nimport data from \"./data\";\nimport { useState, useRef } from \"react\";\nimport Library from \"./components/Library\";\nimport Nav from \"./components/Nav\";\n\nfunction App() {\n  const audioRef = useRef(null);\n  const [songs, setSongs] = useState(data());\n  const [currentSong, setCurrentSong] = useState(songs[0]);\n  const [isPlaying, setIsPlaying] = useState(false);\n  const [songInfo, setSongInfo] = useState({\n    currentTime: 0,\n    duration: 0,\n    animationPercentage: 0,\n  });\n\n  const [libraryStatus, setLibraryStatus] = useState(false);\n\n  const timeUpdateHandler = (e) => {\n    const current = e.target.currentTime;\n    const duration = e.target.duration;\n    const roundedCurrent = Math.round(current);\n    const roundedDuration = Math.round(duration);\n    const animation = Math.round((roundedCurrent / roundedDuration) * 300);\n\n    setSongInfo({\n      ...songInfo,\n      currentTime: current,\n      duration,\n      animationPercentage: animation,\n    });\n  };\n\n  const songEndHandler = async () => {\n    let currentIndex = songs.findIndex((song) => song.id === currentSong.id);\n\n    await setCurrentSong(songs[(currentIndex + 1) % songs.length]);\n    if (isPlaying) audioRef.current.play();\n  };\n\n  return (\n    <div className={`App ${libraryStatus ? \"library-active\" : \"\"}`}>\n      <Nav libraryStatus={libraryStatus} setLibraryStatus={setLibraryStatus} />\n      <Song currentSong={currentSong} />\n      <Player\n        setSongs={setSongs}\n        songs={songs}\n        audioRef={audioRef}\n        setIsPlaying={setIsPlaying}\n        isPlaying={isPlaying}\n        currentSong={currentSong}\n        songInfo={songInfo}\n        setSongInfo={setSongInfo}\n        setCurrentSong={setCurrentSong}\n      />\n      <Library\n        audioRef={audioRef}\n        songs={songs}\n        setCurrentSong={setCurrentSong}\n        setSongs={setSongs}\n        isPlaying={isPlaying}\n        libraryStatus={libraryStatus}\n      />\n      <audio\n        onTimeUpdate={timeUpdateHandler}\n        onLoadedMetadata={timeUpdateHandler}\n        ref={audioRef}\n        src={currentSong.audio}\n        onEnded={songEndHandler}\n      ></audio>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}